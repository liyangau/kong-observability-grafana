services:
  kong:
    image: kong/kong-gateway:3.9
    container_name: kong
    volumes:
      - ./configs/kong.yaml:/config/kong.yaml
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/config/kong.yaml
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_LISTEN=0.0.0.0:8002
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_STATUS_LISTEN=0.0.0.0:8100
      - KONG_TRACING_INSTRUMENTATIONS=all
      - KONG_TRACING_SAMPLING_RATE=1.0
      - KONG_LICENSE_DATA
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    networks:
      - kong-obs
  fluentbit:
    image: fluent/fluent-bit:3.2.5
    container_name: fluentbit
    command:
      - --config=/fluent-bit/etc/fluent-bit.yaml
    networks:
      - kong-obs
    volumes:
      - ./configs/fluent-bit.yaml:/fluent-bit/etc/fluent-bit.yaml
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.119.0
    container_name: otel-collector
    depends_on:
      tempo:
        condition: service_started
    networks:
      - kong-obs
    volumes:
      - ./configs/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=otlp-write-receiver
    ports:
      - "9090:9090"
    sysctls:
      net.core.somaxconn: 511
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kong-obs
  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    command: ["-config.file=/mnt/config/loki-config.yaml"]
    volumes:
      - ./configs/loki-config.yaml:/mnt/config/loki-config.yaml
    networks:
      - kong-obs
  grafana:
    image: grafana/grafana-oss:11.5.1
    container_name: grafana
    environment:
      - GF_USERS_DEFAULT_THEME=light
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards/
    ports:
      - "3000:3000"
    networks:
      - kong-obs
  hotrod:
    image: jaegertracing/example-hotrod:1.65.0
    container_name: hotrod
    command: ["all"]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    networks:
      - kong-obs
  minio:
    image: minio/minio:RELEASE.2025-02-03T21-03-04Z
    environment:
      - MINIO_ACCESS_KEY=tempo
      - MINIO_SECRET_KEY=supersecret
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "9001:9001"
    networks:
      - kong-obs
    entrypoint: /bin/sh -c "mc mb --ignore-existing /data/tempo ; minio server /data --console-address ':9001'"
  tempo:
    image: grafana/tempo:2.6.1
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo.yaml:/etc/tempo.yaml
    networks:
      - kong-obs
    ports:
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    depends_on:
      minio:
        condition: service_healthy
        restart: true
networks:
  kong-obs:
