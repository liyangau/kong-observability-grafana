apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: monitoring
spec:
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'kong-gateway'
              metrics_path: /metrics
              kubernetes_sd_configs:
              - role: pod
                namespaces:
                  names:
                  - kong
                selectors:
                  - role: "pod"
                    label: "app.kubernetes.io/name=gateway"
              relabel_configs:
              - source_labels: [ __meta_kubernetes_pod_container_port_name ]
                regex: 'status'
                action: keep
              - source_labels: [ __meta_kubernetes_pod_name ]
                action: replace
                target_label: instance
            - job_name: 'kong-ingress-controller'
              metrics_path: /metrics
              kubernetes_sd_configs:
              - role: pod
                namespaces:
                  names:
                  - kong
                selectors:
                  - role: "pod"
                    label: "app.kubernetes.io/name=controller"
              relabel_configs:
              - source_labels: [ __meta_kubernetes_pod_container_port_name ]
                regex: 'cmetrics'
                action: keep
              - source_labels: [ __meta_kubernetes_pod_name ]
                action: replace
                target_label: instance
            - job_name: 'otel-collector'
              scrape_interval: 5s
              static_configs:
              - targets: ['0.0.0.0:8888']
    processors:
      batch: {}
      resource:
        attributes:
          - action: upsert
            key: service.name
            value: kong-http-logs
    exporters:
      debug: {}
      otlp/jaeger:
        endpoint: jaeger-collector.monitoring.svc:4317
        tls:
          insecure: true
      prometheus:
        endpoint: 0.0.0.0:9090
      otlphttp:
        endpoint: http://loki.monitoring.svc:3100/otlp
        encoding: json
    service:
      telemetry:
        metrics:
          level: normal
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: "0.0.0.0"
                    port: 8888
        logs:
          level: "info"
      pipelines:
        logs:
          receivers:
            - otlp
          processors:
            - resource
          exporters:
            - otlphttp
        metrics:
          receivers:
            - prometheus
          processors: []
          exporters:
            - prometheus
        traces:
          receivers:
            - otlp
          processors: []
          exporters:
            - debug
            - otlp/jaeger